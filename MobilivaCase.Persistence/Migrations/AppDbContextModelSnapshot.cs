// <auto-generated />
using System;
using AgileManagement.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MobilivaCase.Persistence.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("MobilivaCase.Domain.models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("text");

                    b.Property<string>("CustomerGSM")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("orderDetailId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("orderDetailId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MobilivaCase.Domain.models.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("MobilivaCase.Domain.models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("orderDetailId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("orderDetailId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MobilivaCase.Domain.models.Order", b =>
                {
                    b.HasOne("MobilivaCase.Domain.models.OrderDetail", "orderDetail")
                        .WithMany("Orders")
                        .HasForeignKey("orderDetailId");

                    b.Navigation("orderDetail");
                });

            modelBuilder.Entity("MobilivaCase.Domain.models.Product", b =>
                {
                    b.HasOne("MobilivaCase.Domain.models.OrderDetail", "orderDetail")
                        .WithMany("Products")
                        .HasForeignKey("orderDetailId");

                    b.Navigation("orderDetail");
                });

            modelBuilder.Entity("MobilivaCase.Domain.models.OrderDetail", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
